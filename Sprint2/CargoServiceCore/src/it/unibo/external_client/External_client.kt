/* Generated by AN DISI Unibo */ 
package it.unibo.external_client

import it.unibo.kactor.*
import alice.tuprolog.*
import unibo.basicomm23.*
import unibo.basicomm23.interfaces.*
import unibo.basicomm23.utils.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
import it.unibo.kactor.sysUtil.createActor   //Sept2023
//Sept2024
import org.slf4j.Logger
import org.slf4j.LoggerFactory 
import org.json.simple.parser.JSONParser
import org.json.simple.JSONObject


//User imports JAN2024

class External_client ( name: String, scope: CoroutineScope, isconfined: Boolean=false, isdynamic: Boolean=false ) : 
          ActorBasicFsm( name, scope, confined=isconfined, dynamically=isdynamic ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		//val interruptedStateTransitions = mutableListOf<Transition>()
		//IF actor.withobj !== null val actor.withobj.name» = actor.withobj.method»ENDIF
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						CommUtils.outcyan("$name | STARTS")
						delay(5000) 
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="work1", cond=doswitch() )
				}	 
				state("work0") { //this:State
					action { //it:State
						CommUtils.outcyan("$name | sends requests")
						request("loadrequest", "loadrequest(23)" ,"cargoservice" )  
						delay(2000) 
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
				}	 
				state("work1") { //this:State
					action { //it:State
						CommUtils.outcyan("$name | sends request")
						request("loadrequest", "loadrequest(22)" ,"cargoservice" )  
						delay(10000) 
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t042",targetState="work2",cond=whenReply("loadaccepted"))
					transition(edgeName="t043",targetState="work2",cond=whenReply("loadrejected"))
				}	 
				state("work2") { //this:State
					action { //it:State
						CommUtils.outcyan("$name | sends request")
						request("loadrequest", "loadrequest(21)" ,"cargoservice" )  
						delay(2000) 
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t044",targetState="work3",cond=whenReply("loadaccepted"))
					transition(edgeName="t045",targetState="work3",cond=whenReply("loadrejected"))
				}	 
				state("work3") { //this:State
					action { //it:State
						CommUtils.outcyan("$name | sends request")
						request("loadrequest", "loadrequest(20)" ,"cargoservice" )  
						delay(2000) 
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t046",targetState="work4",cond=whenReply("loadaccepted"))
					transition(edgeName="t047",targetState="work4",cond=whenReply("loadrejected"))
				}	 
				state("work4") { //this:State
					action { //it:State
						CommUtils.outcyan("$name | sends request")
						request("loadrequest", "loadrequest(1)" ,"cargoservice" )  
						delay(2000) 
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
				}	 
			}
		}
} 
